on:
  push:
    branches: develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Check Out Repo 
        uses: actions/checkout@v2
              
      - uses: microsoft/variable-substitution@v1 
        with:
           files: '**/appsettings.json'
        env:
          ConnectionStrings.Default: ${{ secrets.CONNECTION_STRINGS_DEFAULT }}
          TelegramSettings.Domain: ${{ secrets.TELEGRAM_SETTINGS_DOMAIN }}
          TelegramSettings.BotToken: ${{ secrets.TELEGRAM_SETTINGS_BOT_TOKEN }}
          SmscSettings.Login: ${{ secrets.SMSC_SETTINGS_LOGIN }}
          SmscSettings.Password: ${{ secrets.SMSC_SETTINGS_PASSWORD }}
          SmscSettings.URL: ${{ secrets.SMSC_SETTINGS_URL }}
          SmtpSettings.Host: ${{ secrets.SMTP_SETTINGS_HOST }}
          SmtpSettings.Port: ${{ secrets.SMTP_SETTINGS_PORT }}
          SmtpSettings.EmailFrom: ${{ secrets.SMTP_SETTINGS_EMAIL_FROM }}
          SmtpSettings.Password: ${{ secrets.SMTP_SETTINGS_PASSWORD }}
          RabbitMQSettings.HostName: ${{ secrets.RABBITMQ_HOSTNAME }}
          RabbitMQSettings.UserName: ${{ secrets.RABBITMQ_USERNAME }}
          RabbitMQSettings.Password: ${{ secrets.RABBITMQ_PASSWORD }}
          
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_ID }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1  

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_ID }}/${{ secrets.DOCKER_HUB_REPOSITORY_NAME }}:latest
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
          
      - name: Docker Restart
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          script: |
            docker login -u ${{ secrets.DOCKER_HUB_ID }} -p ${{ secrets.DOCKER_HUB_PASS }}
            docker pull ${{ secrets.DOCKER_HUB_ID }}/${{ secrets.DOCKER_HUB_REPOSITORY_NAME }}
            docker kill ${{ secrets.DOCKER_HUB_REPOSITORY_NAME }}
            docker run -it --rm -d -p ${{ secrets.DOCKER_PORTS }} --name ${{ secrets.DOCKER_HUB_REPOSITORY_NAME }} ${{ secrets.DOCKER_HUB_ID }}/${{ secrets.DOCKER_HUB_REPOSITORY_NAME }}
